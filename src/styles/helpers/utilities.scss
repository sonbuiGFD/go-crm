//  CLASS COLOR
//   .text-prinary {
//     color: $primary
//   }
//   .bg-primary {
//     background: $primary
//   }

$color_texts: (
  'primary': $primary,
  'success': $success,
  'warning': $warning,
  'danger': $danger,
) !default;

@include classes-ultils($color_texts);

// DISPLAY CLASS
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $value in $displays {
      .d#{$infix}-#{$value} {
        display: $value !important;
      }
    }
  }
}

// FLEX CLASS

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .flex#{$infix}-row {
      flex-direction: row !important;
    }
    .flex#{$infix}-column {
      flex-direction: column !important;
    }
    .flex#{$infix}-row-reverse {
      flex-direction: row-reverse !important;
    }
    .flex#{$infix}-column-reverse {
      flex-direction: column-reverse !important;
    }

    .flex#{$infix}-wrap {
      flex-wrap: wrap !important;
    }
    .flex#{$infix}-nowrap {
      flex-wrap: nowrap !important;
    }
    .flex#{$infix}-wrap-reverse {
      flex-wrap: wrap-reverse !important;
    }
    .flex#{$infix}-fill {
      flex: 1 1 auto !important;
    }
    // .flex#{$infix}-grow-0 {
    //   flex-grow: 0 !important;
    // }
    // .flex#{$infix}-grow-1 {
    //   flex-grow: 1 !important;
    // }
    // .flex#{$infix}-shrink-0 {
    //   flex-shrink: 0 !important;
    // }
    // .flex#{$infix}-shrink-1 {
    //   flex-shrink: 1 !important;
    // }

    .justify-content#{$infix}-start {
      justify-content: flex-start !important;
    }
    .justify-content#{$infix}-end {
      justify-content: flex-end !important;
    }
    .justify-content#{$infix}-center {
      justify-content: center !important;
    }
    .justify-content#{$infix}-between {
      justify-content: space-between !important;
    }
    .justify-content#{$infix}-around {
      justify-content: space-around !important;
    }

    .align-items#{$infix}-start {
      align-items: flex-start !important;
    }
    .align-items#{$infix}-end {
      align-items: flex-end !important;
    }
    .align-items#{$infix}-center {
      align-items: center !important;
    }
    .align-items#{$infix}-baseline {
      align-items: baseline !important;
    }
    .align-items#{$infix}-stretch {
      align-items: stretch !important;
    }

    // .align-content#{$infix}-start {
    //   align-content: flex-start !important;
    // }
    // .align-content#{$infix}-end {
    //   align-content: flex-end !important;
    // }
    // .align-content#{$infix}-center {
    //   align-content: center !important;
    // }
    // .align-content#{$infix}-between {
    //   align-content: space-between !important;
    // }
    // .align-content#{$infix}-around {
    //   align-content: space-around !important;
    // }
    // .align-content#{$infix}-stretch {
    //   align-content: stretch !important;
    // }

    // .align-self#{$infix}-auto {
    //   align-self: auto !important;
    // }
    // .align-self#{$infix}-start {
    //   align-self: flex-start !important;
    // }
    // .align-self#{$infix}-end {
    //   align-self: flex-end !important;
    // }
    // .align-self#{$infix}-center {
    //   align-self: center !important;
    // }
    // .align-self#{$infix}-baseline {
    //   align-self: baseline !important;
    // }
    // .align-self#{$infix}-stretch {
    //   align-self: stretch !important;
    // }
  }
}

// MARGIN PADDING

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: $length !important;
        }
        .#{$abbrev}t#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        .#{$abbrev}r#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }
        .#{$abbrev}b#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        .#{$abbrev}l#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }
      }
    }

    // // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
    // @each $size, $length in $spacers {
    //   @if $size != 0 {
    //     .m#{$infix}-n#{$size} {
    //       margin: -$length !important;
    //     }
    //     .mt#{$infix}-n#{$size},
    //     .my#{$infix}-n#{$size} {
    //       margin-top: -$length !important;
    //     }
    //     .mr#{$infix}-n#{$size},
    //     .mx#{$infix}-n#{$size} {
    //       margin-right: -$length !important;
    //     }
    //     .mb#{$infix}-n#{$size},
    //     .my#{$infix}-n#{$size} {
    //       margin-bottom: -$length !important;
    //     }
    //     .ml#{$infix}-n#{$size},
    //     .mx#{$infix}-n#{$size} {
    //       margin-left: -$length !important;
    //     }
    //   }
    // }

    // Some special margin utils
    .m#{$infix}-auto {
      margin: auto !important;
    }
    .mt#{$infix}-auto,
    .my#{$infix}-auto {
      margin-top: auto !important;
    }
    .mr#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-right: auto !important;
    }
    .mb#{$infix}-auto,
    .my#{$infix}-auto {
      margin-bottom: auto !important;
    }
    .ml#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-left: auto !important;
    }
  }
}

// TEXT

.text-justify {
  text-align: justify !important;
}

.text-wrap {
  white-space: normal !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left {
      text-align: left !important;
    }
    .text#{$infix}-right {
      text-align: right !important;
    }
    .text#{$infix}-center {
      text-align: center !important;
    }
  }
}

// Transformation

.text-lowercase {
  text-transform: lowercase !important;
}

.text-uppercase {
  text-transform: uppercase !important;
}

.text-capitalize {
  text-transform: capitalize !important;
}

// CONTAINER

.container {
  max-width: 1920px;
  padding-left: 20px;
  padding-right: 20px;
}

// Viewport additional helpers

.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}

// Class reuse
.btn__success {
  background: $success;
  border-color: $success;

  &:hover,
  &:focus {
    background: $success-light;
    border-color: $success-light;
  }
}

.animate__motion {
  transition: all 1s ease-in-out;
}
